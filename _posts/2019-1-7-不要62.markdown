---
layout:     post
title:      "HDU 2089 不要62"
subtitle:   " \"DP\""
date:       2019-1-7
author:     "TanJX"
comments: true
header-img: "img/acm.jpg"
tags:
    - ACM
    - DP
    - 2019寒假集训
---

## 不要62

杭州人称那些傻乎乎粘嗒嗒的人为62（音：laoer）。 
杭州交通管理局经常会扩充一些的士车牌照，新近出来一个好消息，以后上牌照，不再含有不吉利的数字了，这样一来，就可以消除个别的士司机和乘客的心理障碍，更安全地服务大众。 
不吉利的数字为所有含有4或62的号码。例如： 
62315 73418 88914 
都属于不吉利号码。但是，61152虽然含有6和2，但不是62连号，所以不属于不吉利数字之列。 
你的任务是，对于每次给出的一个牌照区间号，推断出交管局今次又要实际上给多少辆新的士车上牌照了。 

**Input**

输入的都是整数对n、m（0<n≤m<1000000），如果遇到都是0的整数对，则输入结束。 

**Output**

对于每个整数对，输出一个不含有不吉利数字的统计个数，该数值占一行位置。 

**Sample Input**

>1 100<br>
0 0

**Sample Output**

>80

**题意**

中文题

**题解**

以dp[pos][state]存pos位数，首位是state的满足条件的个数

**代码**

```
#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>
#include <vector>

using namespace std;
#define me(x,y) memset(x,y,sizeof x);

typedef long long ll;
const int maxn = 1100;
const int INF = 0x3f3f3f3f;
const int MOD = 10007;
ll dp[15][25];
int a[15];
ll n,m,t;

ll dfs(int pos,int pre,bool lead,bool limit){
    if(pos == -1){
        return 1;
    }
    if(!limit && !lead && dp[pos][pre] != -1){
        return dp[pos][pre];
    }
    int up = limit ? a[pos] : 9;
    ll ans = 0;
    for(int i = 0; i <= up; i++){
        if(i == 4 || (pre == 6 && i == 2)){
            continue;
        }
        ans += dfs(pos-1,i,i == 0 && lead,limit && i == a[pos]);
    }
    if(!limit && !lead){
        dp[pos][pre] = ans;
    }
    return ans;
}
ll slove(ll x){
    me(a,0);
    t = 0;
    ll sum = 0;
    while(x){
        a[t++] = x%10;
        x /= 10;
    }
    return dfs(t-1,-1,true,true);
}

int main()
{

    while(cin>>n>>m && n && m){
        me(dp,-1);
        cout<<slove(m)-slove(n-1)<<endl;
    }
    return 0;
}

```